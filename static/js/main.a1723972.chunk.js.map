{"version":3,"sources":["images/close.svg","images/lunchbox.svg","images/check.svg","components/header.jsx","components/menulabel.jsx","components/modal.jsx","components/foodbox.jsx","components/footer.jsx","components/cart.jsx","components/nav.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Component","logo","require","DayMenu","src","width","alt","this","props","thisDay","toUpperCase","substring","toLowerCase","closeIcon","Modal","_this","Fragment","modalState","image","modalTitle","modalPrice","onClick","event","day","title","clicker","close","FoodBox","days","selectedDay","vegan","price","open","key","length","foodbox_SelectButton","foodbox_UnSelect","unSelect","SelectButton","UnSelect","FoodList","state","_this2","items","map","item","foodbox_FoodBox","isVegan","modal","Footer","removeItem","ShoppingCart","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openCartModal","e","preventDefault","setState","cartModal","closeCartModal","count","cart_ShoppingCartModal","closeModal","cart","ShoppingCartModal","newCart","totalPrice","x","undefined","Number","keys","cellSpacing","colSpan","toFixed","check","MobileNav","handleMobile","mobileStatus","nav_MobileNavDay","selected","nav_MobileShowNav","set","MobileShowNav","MobileNavDay","DaysNav","id","scroll","top","foodSelected","Navigation","window","innerWidth","nav_DaysNav","nav_MobileNav","menuItems","App","handleMobileNavClick","mobileNav","countItems","selectClick","newState","assign","setDay","foodItemsPerDay","openModal","modalImage","handleScroll","scrollY","componentDidMount","el","document","querySelector","offsetTop","height","offsetHeight","addEventListener","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","itemCount","bind","assertThisInitialized","seclectClick","style","paddingTop","concat","header","nav","menulabel","foodbox","footer","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1723972.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.ab30de06.svg\";","module.exports = __webpack_public_path__ + \"static/media/lunchbox.a6439d23.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.bd762bed.svg\";","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"header\">\r\n                <div className=\"header-text-box\">\r\n                    <h3>LunchBox!</h3>\r\n                    <p>Please select below...</p>\r\n                </div>\r\n                <div className=\"dark-header\"></div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nconst logo = require('../images/lunchbox.svg');\r\n\r\nclass DayMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"day-menu-box\">\r\n                <img src={logo} width=\"40\" className=\"logo-box\" alt=\"lunchbox logo\"/>\r\n                {/* <h3 className=\"day-title\">{this.props.thisDay}'S Menu</h3> */}\r\n                <h3 className=\"day-title\">{this.props.thisDay[0].toUpperCase() + this.props.thisDay.substring(1).toLowerCase()}'s Menu</h3>\r\n                <hr className=\"short-line\"/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DayMenu;","import React, { Component } from 'react';\r\nconst closeIcon = require('../images/close.svg');\r\n\r\n\r\nclass Modal extends Component {\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={this.props.modalState === true ? \"modal\" : \"modal-hidden\"}>\r\n                    <div className=\"modal-image-box\">\r\n                        <img src={this.props.image} alt={this.props.modalTitle} />\r\n                    </div>\r\n                    <div className=\"modal-text-box-container\">\r\n                        <div className=\"modal-text-box\">\r\n                            <h3>{this.props.modalTitle}</h3>\r\n                            <p>${this.props.modalPrice}</p>\r\n                            <div className=\"modal-select-button-place\">\r\n                                <button onClick={(event, day, title) => this.props.clicker(event, this.props.day, this.props.modalTitle)} className=\"modal-select-button\">+</button>\r\n                            </div>\r\n                            <div className=\"modal-close-button\" onClick={this.props.close}><img src={closeIcon} alt=\"close-button\" className=\"modal-close-button\" /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={this.props.modalState === true ? \"dark\" : \"dark-hidden\"} onClick={this.props.close}></div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\n//test\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\n\r\n\r\nlet FoodBox = props => {\r\n\r\n  return (\r\n    <div  className={props.days[props.selectedDay].title === props.title ? \"food-box-selected\" : \"food-box\"}> \r\n      {props.vegan === true ? <div className=\"vegan\">Vegan</div> : null}\r\n      <div className=\"food-image-box\" onClick={(event, title, price, image) => props.open(event, props.title, props.price, props.image)}>\r\n        <img src={props.image} className=\"food-box-item-image\" alt={props.title}/>\r\n      </div>\r\n      <div className=\"food-lower-box\">\r\n        <div className=\"food-text-box\">\r\n          <li key={props.title} className=\"food-title\">{props.title.length > 20 ? props.title.substring(0,18)+'...' : props.title}</li>\r\n          <li key={props.price} className=\"food-price\">${props.price}</li>\r\n        </div>\r\n      <div className=\"select-button-place\">\r\n        {props.days[props.selectedDay].title !== props.title ? <SelectButton selectedDay={props.selectedDay} title={props.title} price={props.price} clicker={props.clicker}/> : <UnSelect unSelect={props.unSelect} selectedDay={props.selectedDay}/>}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet SelectButton = props => {\r\n    return (\r\n        <button className=\"select-button\" onClick={(event, day, title, price) => props.clicker(event, props.selectedDay, props.title, props.price)}>+</button>\r\n    )\r\n}\r\n\r\nlet UnSelect = props => {\r\n    return (\r\n        <button className=\"unselect-button\" onClick={(event, day) => props.unSelect(event, props.selectedDay)}>+</button>\r\n    )\r\n}\r\n\r\nclass FoodList extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n            <ul className=\"food-list\">\r\n                {this.props.items.map(item => \r\n                <FoodBox title={item.title} price={item.price} image={item.image}vegan={item.isVegan} modal={this.props.modal} open={this.props.open} clicker={this.props.clicker} selectedDay={this.props.selectedDay} days={this.props.days} unSelect={this.props.unSelect} key={item.title + item.price}\r\n                />\r\n                )}\r\n            </ul>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default FoodList;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() { \r\n        return ( \r\n            <footer>\r\n                <p>lunchbox</p>\r\n            </footer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nconst removeItem = require('../images/close.svg');\r\n\r\nclass ShoppingCart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            cartModal: false\r\n         }\r\n    }\r\n\r\n    openCartModal = (e) => {\r\n        e.preventDefault();\r\n        this.setState({cartModal: true})\r\n    }\r\n\r\n    closeCartModal = () => {\r\n        this.setState({cartModal: false})\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div className=\"cart-container\">\r\n                <button className=\"cart-button\" onClick={(event) => this.openCartModal(event)}>\r\n                    {this.props.count === 0 ? \"No items yet\" : this.props.count === 1 ? (\"Checkout: \" + this.props.count + ' item') : (\"Checkout: \" + this.props.count + ' items')}\r\n                </button>\r\n                <ShoppingCartModal cartModal={this.state.cartModal} closeModal={this.closeCartModal} cart={this.props.cart} removeItem={this.props.removeItem}/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nlet ShoppingCartModal = props => {\r\n    let newCart = {}\r\n    let totalPrice = 0;\r\n\r\n    //clear out empty days\r\n    for (var x in props.cart) {\r\n        if (props.cart[x].title === undefined) {\r\n            totalPrice += 0;\r\n        } else {\r\n            totalPrice += Number(props.cart[x].price)\r\n            newCart[x] = {title: props.cart[x].title, price: props.cart[x].price}\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        <div className={props.cartModal === false ? \"cart-hide\" : \"show-cart\"}>\r\n            <div className=\"cart-list-container\">\r\n            <h3>Your lunchbox</h3>\r\n            {Object.keys(newCart).map((item) => \r\n                <table className=\"cart-list\" key={item + newCart[item].title} cellSpacing=\"0\">\r\n                    <tbody>\r\n                        <tr key={item}>\r\n                            <td className=\"cart-modal-day\" key={item} colSpan=\"3\">{item}</td>\r\n                        </tr>\r\n                        <tr key={newCart[item].price + newCart[item].title}>\r\n                            <td className='table-title' key={newCart[item].title}>{newCart[item].title}</td>\r\n                            <td className='table-price' key={newCart[item].price}>${newCart[item].price}</td>\r\n                            <td className=\"remove-item-td\"><button className=\"remove-item\"><img src={removeItem} alt=\"remove item\"width=\"20\" onClick={(event, day) => props.removeItem(event, item)}/></button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> \r\n            )}\r\n            <div className=\"total-bill\">Total bill: ${totalPrice.toFixed(2)}</div>\r\n            <button className=\"cart-modal-close\" onClick={props.closeModal}>Continue ordering</button>\r\n            <button className=\"cart-modal-checkout\">Checkout</button>\r\n            </div>\r\n        </div>\r\n        <div className={props.cartModal === true ? \"dark\" : \"dark-hidden\"} onClick={props.closeModal}></div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n \r\nexport default ShoppingCart;\r\n\r\n","import React, { Component } from 'react';\r\nconst check = require('../images/check.svg');\r\n\r\nlet MobileNav = props => {\r\n    return (    \r\n        <nav className=\"mobile-nav\" onClick={(event) => props.handleMobile(event)}>\r\n            <ul className=\"mobile-nav-list\">\r\n            {props.mobileStatus === false ? <MobileNavDay  days={props.days} selected={props.selected}/> : <MobileShowNav set={props.set} days={props.days} selected={props.selected}/>}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nlet MobileShowNav = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {Object.keys(props.days).map((day) => \r\n                <li key={day} className={day === props.selected ? \"mobile-nav-list-day mobile-nav-list-day-selected\" : \"mobile-nav-list-day\"} onClick={(event) => props.set(event, day)}>{day}</li>\r\n                )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nlet MobileNavDay = props => {\r\n    return (\r\n        <React.Fragment>\r\n        {Object.keys(props.days).map((day) =>\r\n            <li key={day} className={day === props.selected ? \"mobile-nav-list-day\" : \"mobile-nav-list-hidden\"}>{day}</li>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nlet DaysNav = props => {\r\n \r\n    return (\r\n        <div id=\"days-wrapper\"  className={props.scroll > props.top ? \"fixed-nav\" : \"\"}>\r\n            <ul className=\"days-list\" id=\"days-nav\">\r\n                {Object.keys(props.days).map((day) => \r\n                    <li key={day} onClick={(event) => props.set(event, day)} className={props.selected === day ? \"selected-button\" : props.days[day].foodSelected === true ? \"selected-button-success\" : \"days-button\"}>\r\n                    <div className={props.days[day].foodSelected === true ? \"check\" : \"check-none\"}>\r\n                        <img src={check} alt=\"Done\"/>\r\n                    </div>\r\n                    <div>{day}<br />\r\n                        <div className=\"day-food-title\">\r\n                            {(props.days[day].title === undefined ? null : (props.days[day].title.length > 18 ? props.days[day].title.substring(0,18) + '...' : props.days[day].title))}\r\n                        </div>\r\n                    </div> \r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass Navigation extends Component {\r\n    render() { \r\n        let width = window.innerWidth;\r\n        return ( \r\n            width > 900 ? <DaysNav             \r\n                days={this.props.days} \r\n                selected={this.props.selected}\r\n                set={this.props.set} \r\n                scroll={this.props.scroll} \r\n                top={this.props.top}\r\n                handleMobile={this.props.handleMobile}\r\n                mobileStatus={this.props.mobileStatus}/> : <MobileNav             days={this.props.days} \r\n                selected={this.props.selected}\r\n                set={this.props.set} \r\n                scroll={this.props.scroll} \r\n                top={this.props.top}\r\n                handleMobile={this.props.handleMobile}\r\n                mobileStatus={this.props.mobileStatus}/>\r\n         );\r\n    }\r\n}\r\n\r\n\r\n \r\nexport default Navigation;\r\n \r\n","import React, { Component } from 'react';\r\nimport Header from './components/header'\r\nimport days from './json/menu.json'\r\nimport DayMenu from './components/menulabel'\r\nimport Modal from './components/modal'\r\nimport FoodList from './components/foodbox'\r\nimport Footer from './components/footer'\r\nimport ShoppingCart from './components/cart'\r\nimport Navigation from './components/nav'\r\n\r\n\r\n\r\n\r\nconst menuItems = days.days[0];\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        selectedDay: 'MONDAY',\r\n        foodItemsPerDay: menuItems['MONDAY'],\r\n        days: {\r\n            MONDAY: {},\r\n            TUESDAY: {},\r\n            WEDNESDAY: {},\r\n            THURSDAY: {},\r\n            FRIDAY: {}\r\n        },\r\n        mobileNav: false,\r\n        itemCount: 0,\r\n        modal: false,\r\n        modalTitle: '',\r\n        modalPrice: '',\r\n        modalImage: ''\r\n        }\r\n     this.setDay = this.setDay.bind(this)\r\n     this.seclectClick = this.selectClick.bind(this)\r\n     this.handleScroll = this.handleScroll.bind(this)\r\n     this.unSelect = this.unSelect.bind(this)\r\n    }\r\n\r\n    handleMobileNavClick = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.mobileNav === false) {\r\n            this.setState({mobileNav: true})\r\n        } else {\r\n            this.setState({mobileNav: false})\r\n        }\r\n    }\r\n\r\n    countItems = () => {\r\n        let count = 0;\r\n        for (var x in this.state.days) {\r\n            if (this.state.days[x].title === undefined) {\r\n                count += 0\r\n            } else {\r\n                count += 1\r\n            }\r\n        }\r\n        return count\r\n    }\r\n\r\n    selectClick = (e, day, title, price) => {\r\n        e.preventDefault();\r\n        let newState = Object.assign({}, this.state.days)\r\n        newState[day].title = title\r\n        newState[day].price = price\r\n        newState[day].foodSelected = true\r\n        this.setState({\r\n            days: newState,\r\n        })\r\n    }\r\n\r\n    unSelect = (e, day) => {\r\n        e.preventDefault();\r\n        let removeItem = Object.assign({}, this.state.days)\r\n        removeItem[day] = {}\r\n        this.setState({\r\n            days: removeItem,\r\n        })\r\n    }\r\n\r\n\r\n    setDay = (e, day) => {\r\n        this.setState({\r\n            selectedDay: day,\r\n            foodItemsPerDay: menuItems[day],\r\n        })\r\n    }\r\n\r\n    openModal = (e, title, price, image) => {\r\n        this.setState({\r\n            modal: true,\r\n            modalTitle: title,\r\n            modalPrice: price,\r\n            modalImage: image\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            modal: false,\r\n            modalTitle: '',\r\n            modalPrice: ''\r\n        })\r\n    }\r\n\r\n    handleScroll = () => {\r\n        this.setState({scroll: window.scrollY})\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const el = document.querySelector('#days-wrapper')\r\n        this.setState({\r\n            top: el.offsetTop ,\r\n            height: el.offsetHeight\r\n        });\r\n        window.addEventListener('scroll', this.handleScroll)\r\n    }\r\n    componentDidUpdate() {\r\n\t\tthis.state.scroll > this.state.top ? \r\n\t\t\tdocument.querySelector('#wrapper').style.paddingTop = `${this.state.height}px` :\r\n\t\t\tdocument.querySelector('#wrapper').style.paddingTop = 0;\r\n\t}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <Header/>\r\n        <Navigation \r\n            days={this.state.days} \r\n            selected={this.state.selectedDay}\r\n            set={this.setDay} \r\n            scroll={this.state.scroll} \r\n            top={this.state.top}\r\n            handleMobile={this.handleMobileNavClick}\r\n            mobileStatus={this.state.mobileNav}\r\n        />\r\n\r\n        <div id=\"wrapper\">\r\n\r\n            <DayMenu thisDay={this.state.selectedDay} />\r\n            <FoodList items={this.state.foodItemsPerDay} selectedDay={this.state.selectedDay} open={this.openModal} clicker={this.selectClick} days={this.state.days} unSelect={this.unSelect}\r\n            />\r\n            <Modal close={this.closeModal} modalState={this.state.modal} modalTitle={this.state.modalTitle} image={this.state.modalImage} day={this.state.selectedDay} modalPrice={this.state.modalPrice} clicker={this.selectClick}/>\r\n        </div>\r\n        <ShoppingCart removeItem={this.unSelect} count={this.countItems()} cart={this.state.days}/>\r\n\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}